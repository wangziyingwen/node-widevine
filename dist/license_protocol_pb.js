import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
export const file_license_protocol = fileDesc("");
export const LicenseIdentificationSchema = messageDesc(file_license_protocol, 0);
export const LicenseSchema = messageDesc(file_license_protocol, 1);
export const License_PolicySchema = messageDesc(file_license_protocol, 1, 0);
export const License_KeyContainerSchema = messageDesc(file_license_protocol, 1, 1);
export const License_KeyContainer_KeyControlSchema = messageDesc(file_license_protocol, 1, 1, 0);
export const License_KeyContainer_OutputProtectionSchema = messageDesc(file_license_protocol, 1, 1, 1);
export var License_KeyContainer_OutputProtection_HDCP;
(function (License_KeyContainer_OutputProtection_HDCP) {
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_NONE"] = 0] = "HDCP_NONE";
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_V1"] = 1] = "HDCP_V1";
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_V2"] = 2] = "HDCP_V2";
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_V2_1"] = 3] = "HDCP_V2_1";
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_V2_2"] = 4] = "HDCP_V2_2";
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_V2_3"] = 5] = "HDCP_V2_3";
    License_KeyContainer_OutputProtection_HDCP[License_KeyContainer_OutputProtection_HDCP["HDCP_NO_DIGITAL_OUTPUT"] = 255] = "HDCP_NO_DIGITAL_OUTPUT";
})(License_KeyContainer_OutputProtection_HDCP || (License_KeyContainer_OutputProtection_HDCP = {}));
export const License_KeyContainer_OutputProtection_HDCPSchema = enumDesc(file_license_protocol, 1, 1, 1, 0);
export var License_KeyContainer_OutputProtection_CGMS;
(function (License_KeyContainer_OutputProtection_CGMS) {
    License_KeyContainer_OutputProtection_CGMS[License_KeyContainer_OutputProtection_CGMS["CGMS_NONE"] = 42] = "CGMS_NONE";
    License_KeyContainer_OutputProtection_CGMS[License_KeyContainer_OutputProtection_CGMS["COPY_FREE"] = 0] = "COPY_FREE";
    License_KeyContainer_OutputProtection_CGMS[License_KeyContainer_OutputProtection_CGMS["COPY_ONCE"] = 2] = "COPY_ONCE";
    License_KeyContainer_OutputProtection_CGMS[License_KeyContainer_OutputProtection_CGMS["COPY_NEVER"] = 3] = "COPY_NEVER";
})(License_KeyContainer_OutputProtection_CGMS || (License_KeyContainer_OutputProtection_CGMS = {}));
export const License_KeyContainer_OutputProtection_CGMSSchema = enumDesc(file_license_protocol, 1, 1, 1, 1);
export var License_KeyContainer_OutputProtection_HdcpSrmRule;
(function (License_KeyContainer_OutputProtection_HdcpSrmRule) {
    License_KeyContainer_OutputProtection_HdcpSrmRule[License_KeyContainer_OutputProtection_HdcpSrmRule["HDCP_SRM_RULE_NONE"] = 0] = "HDCP_SRM_RULE_NONE";
    License_KeyContainer_OutputProtection_HdcpSrmRule[License_KeyContainer_OutputProtection_HdcpSrmRule["CURRENT_SRM"] = 1] = "CURRENT_SRM";
})(License_KeyContainer_OutputProtection_HdcpSrmRule || (License_KeyContainer_OutputProtection_HdcpSrmRule = {}));
export const License_KeyContainer_OutputProtection_HdcpSrmRuleSchema = enumDesc(file_license_protocol, 1, 1, 1, 2);
export const License_KeyContainer_VideoResolutionConstraintSchema = messageDesc(file_license_protocol, 1, 1, 2);
export const License_KeyContainer_OperatorSessionKeyPermissionsSchema = messageDesc(file_license_protocol, 1, 1, 3);
export var License_KeyContainer_KeyType;
(function (License_KeyContainer_KeyType) {
    License_KeyContainer_KeyType[License_KeyContainer_KeyType["SIGNING"] = 1] = "SIGNING";
    License_KeyContainer_KeyType[License_KeyContainer_KeyType["CONTENT"] = 2] = "CONTENT";
    License_KeyContainer_KeyType[License_KeyContainer_KeyType["KEY_CONTROL"] = 3] = "KEY_CONTROL";
    License_KeyContainer_KeyType[License_KeyContainer_KeyType["OPERATOR_SESSION"] = 4] = "OPERATOR_SESSION";
    License_KeyContainer_KeyType[License_KeyContainer_KeyType["ENTITLEMENT"] = 5] = "ENTITLEMENT";
    License_KeyContainer_KeyType[License_KeyContainer_KeyType["OEM_CONTENT"] = 6] = "OEM_CONTENT";
})(License_KeyContainer_KeyType || (License_KeyContainer_KeyType = {}));
export const License_KeyContainer_KeyTypeSchema = enumDesc(file_license_protocol, 1, 1, 0);
export var License_KeyContainer_SecurityLevel;
(function (License_KeyContainer_SecurityLevel) {
    License_KeyContainer_SecurityLevel[License_KeyContainer_SecurityLevel["SW_SECURE_CRYPTO"] = 1] = "SW_SECURE_CRYPTO";
    License_KeyContainer_SecurityLevel[License_KeyContainer_SecurityLevel["SW_SECURE_DECODE"] = 2] = "SW_SECURE_DECODE";
    License_KeyContainer_SecurityLevel[License_KeyContainer_SecurityLevel["HW_SECURE_CRYPTO"] = 3] = "HW_SECURE_CRYPTO";
    License_KeyContainer_SecurityLevel[License_KeyContainer_SecurityLevel["HW_SECURE_DECODE"] = 4] = "HW_SECURE_DECODE";
    License_KeyContainer_SecurityLevel[License_KeyContainer_SecurityLevel["HW_SECURE_ALL"] = 5] = "HW_SECURE_ALL";
})(License_KeyContainer_SecurityLevel || (License_KeyContainer_SecurityLevel = {}));
export const License_KeyContainer_SecurityLevelSchema = enumDesc(file_license_protocol, 1, 1, 1);
export const LicenseRequestSchema = messageDesc(file_license_protocol, 2);
export const LicenseRequest_ContentIdentificationSchema = messageDesc(file_license_protocol, 2, 0);
export const LicenseRequest_ContentIdentification_WidevinePsshDataSchema = messageDesc(file_license_protocol, 2, 0, 0);
export const LicenseRequest_ContentIdentification_WebmKeyIdSchema = messageDesc(file_license_protocol, 2, 0, 1);
export const LicenseRequest_ContentIdentification_ExistingLicenseSchema = messageDesc(file_license_protocol, 2, 0, 2);
export const LicenseRequest_ContentIdentification_InitDataSchema = messageDesc(file_license_protocol, 2, 0, 3);
export var LicenseRequest_ContentIdentification_InitData_InitDataType;
(function (LicenseRequest_ContentIdentification_InitData_InitDataType) {
    LicenseRequest_ContentIdentification_InitData_InitDataType[LicenseRequest_ContentIdentification_InitData_InitDataType["CENC"] = 1] = "CENC";
    LicenseRequest_ContentIdentification_InitData_InitDataType[LicenseRequest_ContentIdentification_InitData_InitDataType["WEBM"] = 2] = "WEBM";
})(LicenseRequest_ContentIdentification_InitData_InitDataType || (LicenseRequest_ContentIdentification_InitData_InitDataType = {}));
export const LicenseRequest_ContentIdentification_InitData_InitDataTypeSchema = enumDesc(file_license_protocol, 2, 0, 3, 0);
export var LicenseRequest_RequestType;
(function (LicenseRequest_RequestType) {
    LicenseRequest_RequestType[LicenseRequest_RequestType["NEW"] = 1] = "NEW";
    LicenseRequest_RequestType[LicenseRequest_RequestType["RENEWAL"] = 2] = "RENEWAL";
    LicenseRequest_RequestType[LicenseRequest_RequestType["RELEASE"] = 3] = "RELEASE";
})(LicenseRequest_RequestType || (LicenseRequest_RequestType = {}));
export const LicenseRequest_RequestTypeSchema = enumDesc(file_license_protocol, 2, 0);
export const MetricDataSchema = messageDesc(file_license_protocol, 3);
export const MetricData_TypeValueSchema = messageDesc(file_license_protocol, 3, 0);
export var MetricData_MetricType;
(function (MetricData_MetricType) {
    MetricData_MetricType[MetricData_MetricType["LATENCY"] = 1] = "LATENCY";
    MetricData_MetricType[MetricData_MetricType["TIMESTAMP"] = 2] = "TIMESTAMP";
})(MetricData_MetricType || (MetricData_MetricType = {}));
export const MetricData_MetricTypeSchema = enumDesc(file_license_protocol, 3, 0);
export const VersionInfoSchema = messageDesc(file_license_protocol, 4);
export const SignedMessageSchema = messageDesc(file_license_protocol, 5);
export var SignedMessage_MessageType;
(function (SignedMessage_MessageType) {
    SignedMessage_MessageType[SignedMessage_MessageType["LICENSE_REQUEST"] = 1] = "LICENSE_REQUEST";
    SignedMessage_MessageType[SignedMessage_MessageType["LICENSE"] = 2] = "LICENSE";
    SignedMessage_MessageType[SignedMessage_MessageType["ERROR_RESPONSE"] = 3] = "ERROR_RESPONSE";
    SignedMessage_MessageType[SignedMessage_MessageType["SERVICE_CERTIFICATE_REQUEST"] = 4] = "SERVICE_CERTIFICATE_REQUEST";
    SignedMessage_MessageType[SignedMessage_MessageType["SERVICE_CERTIFICATE"] = 5] = "SERVICE_CERTIFICATE";
    SignedMessage_MessageType[SignedMessage_MessageType["SUB_LICENSE"] = 6] = "SUB_LICENSE";
    SignedMessage_MessageType[SignedMessage_MessageType["CAS_LICENSE_REQUEST"] = 7] = "CAS_LICENSE_REQUEST";
    SignedMessage_MessageType[SignedMessage_MessageType["CAS_LICENSE"] = 8] = "CAS_LICENSE";
    SignedMessage_MessageType[SignedMessage_MessageType["EXTERNAL_LICENSE_REQUEST"] = 9] = "EXTERNAL_LICENSE_REQUEST";
    SignedMessage_MessageType[SignedMessage_MessageType["EXTERNAL_LICENSE"] = 10] = "EXTERNAL_LICENSE";
})(SignedMessage_MessageType || (SignedMessage_MessageType = {}));
export const SignedMessage_MessageTypeSchema = enumDesc(file_license_protocol, 5, 0);
export var SignedMessage_SessionKeyType;
(function (SignedMessage_SessionKeyType) {
    SignedMessage_SessionKeyType[SignedMessage_SessionKeyType["UNDEFINED"] = 0] = "UNDEFINED";
    SignedMessage_SessionKeyType[SignedMessage_SessionKeyType["WRAPPED_AES_KEY"] = 1] = "WRAPPED_AES_KEY";
    SignedMessage_SessionKeyType[SignedMessage_SessionKeyType["EPHERMERAL_ECC_PUBLIC_KEY"] = 2] = "EPHERMERAL_ECC_PUBLIC_KEY";
})(SignedMessage_SessionKeyType || (SignedMessage_SessionKeyType = {}));
export const SignedMessage_SessionKeyTypeSchema = enumDesc(file_license_protocol, 5, 1);
export const ClientIdentificationSchema = messageDesc(file_license_protocol, 6);
export const ClientIdentification_NameValueSchema = messageDesc(file_license_protocol, 6, 0);
export const ClientIdentification_ClientCapabilitiesSchema = messageDesc(file_license_protocol, 6, 1);
export var ClientIdentification_ClientCapabilities_HdcpVersion;
(function (ClientIdentification_ClientCapabilities_HdcpVersion) {
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_NONE"] = 0] = "HDCP_NONE";
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_V1"] = 1] = "HDCP_V1";
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_V2"] = 2] = "HDCP_V2";
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_V2_1"] = 3] = "HDCP_V2_1";
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_V2_2"] = 4] = "HDCP_V2_2";
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_V2_3"] = 5] = "HDCP_V2_3";
    ClientIdentification_ClientCapabilities_HdcpVersion[ClientIdentification_ClientCapabilities_HdcpVersion["HDCP_NO_DIGITAL_OUTPUT"] = 255] = "HDCP_NO_DIGITAL_OUTPUT";
})(ClientIdentification_ClientCapabilities_HdcpVersion || (ClientIdentification_ClientCapabilities_HdcpVersion = {}));
export const ClientIdentification_ClientCapabilities_HdcpVersionSchema = enumDesc(file_license_protocol, 6, 1, 0);
export var ClientIdentification_ClientCapabilities_CertificateKeyType;
(function (ClientIdentification_ClientCapabilities_CertificateKeyType) {
    ClientIdentification_ClientCapabilities_CertificateKeyType[ClientIdentification_ClientCapabilities_CertificateKeyType["RSA_2048"] = 0] = "RSA_2048";
    ClientIdentification_ClientCapabilities_CertificateKeyType[ClientIdentification_ClientCapabilities_CertificateKeyType["RSA_3072"] = 1] = "RSA_3072";
    ClientIdentification_ClientCapabilities_CertificateKeyType[ClientIdentification_ClientCapabilities_CertificateKeyType["ECC_SECP256R1"] = 2] = "ECC_SECP256R1";
    ClientIdentification_ClientCapabilities_CertificateKeyType[ClientIdentification_ClientCapabilities_CertificateKeyType["ECC_SECP384R1"] = 3] = "ECC_SECP384R1";
    ClientIdentification_ClientCapabilities_CertificateKeyType[ClientIdentification_ClientCapabilities_CertificateKeyType["ECC_SECP521R1"] = 4] = "ECC_SECP521R1";
})(ClientIdentification_ClientCapabilities_CertificateKeyType || (ClientIdentification_ClientCapabilities_CertificateKeyType = {}));
export const ClientIdentification_ClientCapabilities_CertificateKeyTypeSchema = enumDesc(file_license_protocol, 6, 1, 1);
export var ClientIdentification_ClientCapabilities_AnalogOutputCapabilities;
(function (ClientIdentification_ClientCapabilities_AnalogOutputCapabilities) {
    ClientIdentification_ClientCapabilities_AnalogOutputCapabilities[ClientIdentification_ClientCapabilities_AnalogOutputCapabilities["ANALOG_OUTPUT_UNKNOWN"] = 0] = "ANALOG_OUTPUT_UNKNOWN";
    ClientIdentification_ClientCapabilities_AnalogOutputCapabilities[ClientIdentification_ClientCapabilities_AnalogOutputCapabilities["ANALOG_OUTPUT_NONE"] = 1] = "ANALOG_OUTPUT_NONE";
    ClientIdentification_ClientCapabilities_AnalogOutputCapabilities[ClientIdentification_ClientCapabilities_AnalogOutputCapabilities["ANALOG_OUTPUT_SUPPORTED"] = 2] = "ANALOG_OUTPUT_SUPPORTED";
    ClientIdentification_ClientCapabilities_AnalogOutputCapabilities[ClientIdentification_ClientCapabilities_AnalogOutputCapabilities["ANALOG_OUTPUT_SUPPORTS_CGMS_A"] = 3] = "ANALOG_OUTPUT_SUPPORTS_CGMS_A";
})(ClientIdentification_ClientCapabilities_AnalogOutputCapabilities || (ClientIdentification_ClientCapabilities_AnalogOutputCapabilities = {}));
export const ClientIdentification_ClientCapabilities_AnalogOutputCapabilitiesSchema = enumDesc(file_license_protocol, 6, 1, 2);
export const ClientIdentification_ClientCredentialsSchema = messageDesc(file_license_protocol, 6, 2);
export var ClientIdentification_TokenType;
(function (ClientIdentification_TokenType) {
    ClientIdentification_TokenType[ClientIdentification_TokenType["KEYBOX"] = 0] = "KEYBOX";
    ClientIdentification_TokenType[ClientIdentification_TokenType["DRM_DEVICE_CERTIFICATE"] = 1] = "DRM_DEVICE_CERTIFICATE";
    ClientIdentification_TokenType[ClientIdentification_TokenType["REMOTE_ATTESTATION_CERTIFICATE"] = 2] = "REMOTE_ATTESTATION_CERTIFICATE";
    ClientIdentification_TokenType[ClientIdentification_TokenType["OEM_DEVICE_CERTIFICATE"] = 3] = "OEM_DEVICE_CERTIFICATE";
})(ClientIdentification_TokenType || (ClientIdentification_TokenType = {}));
export const ClientIdentification_TokenTypeSchema = enumDesc(file_license_protocol, 6, 0);
export const EncryptedClientIdentificationSchema = messageDesc(file_license_protocol, 7);
export const DrmCertificateSchema = messageDesc(file_license_protocol, 8);
export const DrmCertificate_EncryptionKeySchema = messageDesc(file_license_protocol, 8, 0);
export var DrmCertificate_Type;
(function (DrmCertificate_Type) {
    DrmCertificate_Type[DrmCertificate_Type["ROOT"] = 0] = "ROOT";
    DrmCertificate_Type[DrmCertificate_Type["DEVICE_MODEL"] = 1] = "DEVICE_MODEL";
    DrmCertificate_Type[DrmCertificate_Type["DEVICE"] = 2] = "DEVICE";
    DrmCertificate_Type[DrmCertificate_Type["SERVICE"] = 3] = "SERVICE";
    DrmCertificate_Type[DrmCertificate_Type["PROVISIONER"] = 4] = "PROVISIONER";
})(DrmCertificate_Type || (DrmCertificate_Type = {}));
export const DrmCertificate_TypeSchema = enumDesc(file_license_protocol, 8, 0);
export var DrmCertificate_ServiceType;
(function (DrmCertificate_ServiceType) {
    DrmCertificate_ServiceType[DrmCertificate_ServiceType["UNKNOWN_SERVICE_TYPE"] = 0] = "UNKNOWN_SERVICE_TYPE";
    DrmCertificate_ServiceType[DrmCertificate_ServiceType["LICENSE_SERVER_SDK"] = 1] = "LICENSE_SERVER_SDK";
    DrmCertificate_ServiceType[DrmCertificate_ServiceType["LICENSE_SERVER_PROXY_SDK"] = 2] = "LICENSE_SERVER_PROXY_SDK";
    DrmCertificate_ServiceType[DrmCertificate_ServiceType["PROVISIONING_SDK"] = 3] = "PROVISIONING_SDK";
    DrmCertificate_ServiceType[DrmCertificate_ServiceType["CAS_PROXY_SDK"] = 4] = "CAS_PROXY_SDK";
})(DrmCertificate_ServiceType || (DrmCertificate_ServiceType = {}));
export const DrmCertificate_ServiceTypeSchema = enumDesc(file_license_protocol, 8, 1);
export var DrmCertificate_Algorithm;
(function (DrmCertificate_Algorithm) {
    DrmCertificate_Algorithm[DrmCertificate_Algorithm["UNKNOWN_ALGORITHM"] = 0] = "UNKNOWN_ALGORITHM";
    DrmCertificate_Algorithm[DrmCertificate_Algorithm["RSA"] = 1] = "RSA";
    DrmCertificate_Algorithm[DrmCertificate_Algorithm["ECC_SECP256R1"] = 2] = "ECC_SECP256R1";
    DrmCertificate_Algorithm[DrmCertificate_Algorithm["ECC_SECP384R1"] = 3] = "ECC_SECP384R1";
    DrmCertificate_Algorithm[DrmCertificate_Algorithm["ECC_SECP521R1"] = 4] = "ECC_SECP521R1";
})(DrmCertificate_Algorithm || (DrmCertificate_Algorithm = {}));
export const DrmCertificate_AlgorithmSchema = enumDesc(file_license_protocol, 8, 2);
export const SignedDrmCertificateSchema = messageDesc(file_license_protocol, 9);
export const WidevinePsshDataSchema = messageDesc(file_license_protocol, 10);
export const WidevinePsshData_EntitledKeySchema = messageDesc(file_license_protocol, 10, 0);
export var WidevinePsshData_Type;
(function (WidevinePsshData_Type) {
    WidevinePsshData_Type[WidevinePsshData_Type["SINGLE"] = 0] = "SINGLE";
    WidevinePsshData_Type[WidevinePsshData_Type["ENTITLEMENT"] = 1] = "ENTITLEMENT";
    WidevinePsshData_Type[WidevinePsshData_Type["ENTITLED_KEY"] = 2] = "ENTITLED_KEY";
})(WidevinePsshData_Type || (WidevinePsshData_Type = {}));
export const WidevinePsshData_TypeSchema = enumDesc(file_license_protocol, 10, 0);
export var WidevinePsshData_Algorithm;
(function (WidevinePsshData_Algorithm) {
    WidevinePsshData_Algorithm[WidevinePsshData_Algorithm["UNENCRYPTED"] = 0] = "UNENCRYPTED";
    WidevinePsshData_Algorithm[WidevinePsshData_Algorithm["AESCTR"] = 1] = "AESCTR";
})(WidevinePsshData_Algorithm || (WidevinePsshData_Algorithm = {}));
export const WidevinePsshData_AlgorithmSchema = enumDesc(file_license_protocol, 10, 1);
export const FileHashesSchema = messageDesc(file_license_protocol, 11);
export const FileHashes_SignatureSchema = messageDesc(file_license_protocol, 11, 0);
export var LicenseType;
(function (LicenseType) {
    LicenseType[LicenseType["STREAMING"] = 1] = "STREAMING";
    LicenseType[LicenseType["OFFLINE"] = 2] = "OFFLINE";
    LicenseType[LicenseType["AUTOMATIC"] = 3] = "AUTOMATIC";
})(LicenseType || (LicenseType = {}));
export const LicenseTypeSchema = enumDesc(file_license_protocol, 0);
export var PlatformVerificationStatus;
(function (PlatformVerificationStatus) {
    PlatformVerificationStatus[PlatformVerificationStatus["PLATFORM_UNVERIFIED"] = 0] = "PLATFORM_UNVERIFIED";
    PlatformVerificationStatus[PlatformVerificationStatus["PLATFORM_TAMPERED"] = 1] = "PLATFORM_TAMPERED";
    PlatformVerificationStatus[PlatformVerificationStatus["PLATFORM_SOFTWARE_VERIFIED"] = 2] = "PLATFORM_SOFTWARE_VERIFIED";
    PlatformVerificationStatus[PlatformVerificationStatus["PLATFORM_HARDWARE_VERIFIED"] = 3] = "PLATFORM_HARDWARE_VERIFIED";
    PlatformVerificationStatus[PlatformVerificationStatus["PLATFORM_NO_VERIFICATION"] = 4] = "PLATFORM_NO_VERIFICATION";
    PlatformVerificationStatus[PlatformVerificationStatus["PLATFORM_SECURE_STORAGE_SOFTWARE_VERIFIED"] = 5] = "PLATFORM_SECURE_STORAGE_SOFTWARE_VERIFIED";
})(PlatformVerificationStatus || (PlatformVerificationStatus = {}));
export const PlatformVerificationStatusSchema = enumDesc(file_license_protocol, 1);
export var ProtocolVersion;
(function (ProtocolVersion) {
    ProtocolVersion[ProtocolVersion["VERSION_2_0"] = 20] = "VERSION_2_0";
    ProtocolVersion[ProtocolVersion["VERSION_2_1"] = 21] = "VERSION_2_1";
    ProtocolVersion[ProtocolVersion["VERSION_2_2"] = 22] = "VERSION_2_2";
})(ProtocolVersion || (ProtocolVersion = {}));
export const ProtocolVersionSchema = enumDesc(file_license_protocol, 2);
export var HashAlgorithmProto;
(function (HashAlgorithmProto) {
    HashAlgorithmProto[HashAlgorithmProto["HASH_ALGORITHM_UNSPECIFIED"] = 0] = "HASH_ALGORITHM_UNSPECIFIED";
    HashAlgorithmProto[HashAlgorithmProto["HASH_ALGORITHM_SHA_1"] = 1] = "HASH_ALGORITHM_SHA_1";
    HashAlgorithmProto[HashAlgorithmProto["HASH_ALGORITHM_SHA_256"] = 2] = "HASH_ALGORITHM_SHA_256";
    HashAlgorithmProto[HashAlgorithmProto["HASH_ALGORITHM_SHA_384"] = 3] = "HASH_ALGORITHM_SHA_384";
})(HashAlgorithmProto || (HashAlgorithmProto = {}));
export const HashAlgorithmProtoSchema = enumDesc(file_license_protocol, 3);
//# sourceMappingURL=license_protocol_pb.js.map